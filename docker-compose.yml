version: '3.4'

networks:
  dotnetcorenetwork:

volumes:
    grafana_data:
    logger_data:
    db_data:

services:
  bash:
    image: bash:latest
    stdin_open: true
    tty: true
    command: bash -c "/home/fake-logger.sh > /var/log/demo/log.out"
    volumes:
      - logger_data:/var/log/demo
      - ./scripts/fake-logger.sh:/home/fake-logger.sh
    networks:
      - dotnetcorenetwork

  aspnetcore:
    image: mattklup/aspnetcore-5:2
    ports:
      - 8080:80
    environment:
      DB_CONNECTION_STRING: host=postgres;port=5432;database=sampledb;username=dbuser;password=ChangeThis!
    networks:
      - dotnetcorenetwork

  postgres:
    image: postgres:latest
    ports:
      - 5432:5423
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres/seed.sql :/docker-entrypoint-initdb.d/seed.sql
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: ChangeThis!
      POSTGRES_DB: sampledb
    networks:
      - dotnetcorenetwork

  prometheus:
    image: quay.io/prometheus/prometheus:latest
    depends_on:
      - aspnetcore
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - dotnetcorenetwork

  grafana:
      image : grafana/grafana
      depends_on:
        - prometheus
      ports:
        - 3000:3000
      restart: always
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=ChangeThis!
        - GF_USERS_ALLOW_SIGN_UP=false
      volumes:
        - grafana_data:/var/lib/grafana
        - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
        - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      networks:
        - dotnetcorenetwork

  fluent-bit:
    image: fluent/fluent-bit
    depends_on:
      - elasticsearch
    volumes:
      - ./fluentbit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - logger_data:/var/log/demo

    networks:
      - dotnetcorenetwork

  elasticsearch:
    image: elasticsearch:7.6.2
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
    networks:
      - dotnetcorenetwork

  jaeger:
    image: jaegertracing/opentelemetry-all-in-one
    ports:
      - 13133:13133 # health check
      - 16686:16686 # dashboard
      - 4317:55680 # OTLP
    networks:
      - dotnetcorenetwork